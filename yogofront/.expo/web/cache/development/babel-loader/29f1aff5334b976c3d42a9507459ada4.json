{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Documents\\\\GitHub\\\\kkyu\\\\yogo\\\\yogofront\\\\components\\\\Block.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { theme } from \"../constants\";\n\nvar Block = function (_Component) {\n  _inherits(Block, _Component);\n\n  var _super = _createSuper(Block);\n\n  function Block() {\n    _classCallCheck(this, Block);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Block, [{\n    key: \"handleMargins\",\n    value: function handleMargins() {\n      var margin = this.props.margin;\n\n      if (typeof margin === \"number\") {\n        return {\n          marginTop: margin,\n          marginRight: margin,\n          marginBottom: margin,\n          marginLeft: margin\n        };\n      }\n\n      if (typeof margin === \"object\") {\n        var marginSize = Object.keys(margin).length;\n\n        switch (marginSize) {\n          case 1:\n            return {\n              marginTop: margin[0],\n              marginRight: margin[0],\n              marginBottom: margin[0],\n              marginLeft: margin[0]\n            };\n\n          case 2:\n            return {\n              marginTop: margin[0],\n              marginRight: margin[1],\n              marginBottom: margin[0],\n              marginLeft: margin[1]\n            };\n\n          case 3:\n            return {\n              marginTop: margin[0],\n              marginRight: margin[1],\n              marginBottom: margin[2],\n              marginLeft: margin[1]\n            };\n\n          default:\n            return {\n              marginTop: margin[0],\n              marginRight: margin[1],\n              marginBottom: margin[2],\n              marginLeft: margin[3]\n            };\n        }\n      }\n    }\n  }, {\n    key: \"handlePaddings\",\n    value: function handlePaddings() {\n      var padding = this.props.padding;\n\n      if (typeof padding === \"number\") {\n        return {\n          paddingTop: padding,\n          paddingRight: padding,\n          paddingBottom: padding,\n          paddingLeft: padding\n        };\n      }\n\n      if (typeof padding === \"object\") {\n        var paddingSize = Object.keys(padding).length;\n\n        switch (paddingSize) {\n          case 1:\n            return {\n              paddingTop: padding[0],\n              paddingRight: padding[0],\n              paddingBottom: padding[0],\n              paddingLeft: padding[0]\n            };\n\n          case 2:\n            return {\n              paddingTop: padding[0],\n              paddingRight: padding[1],\n              paddingBottom: padding[0],\n              paddingLeft: padding[1]\n            };\n\n          case 3:\n            return {\n              paddingTop: padding[0],\n              paddingRight: padding[1],\n              paddingBottom: padding[2],\n              paddingLeft: padding[1]\n            };\n\n          default:\n            return {\n              paddingTop: padding[0],\n              paddingRight: padding[1],\n              paddingBottom: padding[2],\n              paddingLeft: padding[3]\n            };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          flex = _this$props.flex,\n          row = _this$props.row,\n          column = _this$props.column,\n          center = _this$props.center,\n          middle = _this$props.middle,\n          left = _this$props.left,\n          right = _this$props.right,\n          top = _this$props.top,\n          bottom = _this$props.bottom,\n          card = _this$props.card,\n          shadow = _this$props.shadow,\n          color = _this$props.color,\n          space = _this$props.space,\n          padding = _this$props.padding,\n          margin = _this$props.margin,\n          animated = _this$props.animated,\n          wrap = _this$props.wrap,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"flex\", \"row\", \"column\", \"center\", \"middle\", \"left\", \"right\", \"top\", \"bottom\", \"card\", \"shadow\", \"color\", \"space\", \"padding\", \"margin\", \"animated\", \"wrap\", \"style\", \"children\"]);\n\n      var blockStyles = [styles.block, flex && {\n        flex: flex\n      }, flex === false && {\n        flex: 0\n      }, row && styles.row, column && styles.column, center && styles.center, middle && styles.middle, left && styles.left, right && styles.right, top && styles.top, bottom && styles.bottom, margin && _objectSpread({}, this.handleMargins()), padding && _objectSpread({}, this.handlePaddings()), card && styles.card, shadow && styles.shadow, space && {\n        justifyContent: \"space-\" + space\n      }, wrap && {\n        flexWrap: \"wrap\"\n      }, color && styles[color], color && !styles[color] && {\n        backgroundColor: color\n      }, style];\n\n      if (animated) {\n        return React.createElement(Animated.View, _extends({\n          style: blockStyles\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }\n        }), children);\n      }\n\n      return React.createElement(View, _extends({\n        style: blockStyles\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }), children);\n    }\n  }]);\n\n  return Block;\n}(Component);\n\nexport { Block as default };\nexport var styles = StyleSheet.create({\n  block: {\n    flex: 1\n  },\n  row: {\n    flexDirection: \"row\"\n  },\n  column: {\n    flexDirection: \"column\"\n  },\n  card: {\n    borderRadius: theme.sizes.radius\n  },\n  center: {\n    alignItems: \"center\"\n  },\n  middle: {\n    justifyContent: \"center\"\n  },\n  left: {\n    justifyContent: \"flex-start\"\n  },\n  right: {\n    justifyContent: \"flex-end\"\n  },\n  top: {\n    justifyContent: \"flex-start\"\n  },\n  bottom: {\n    justifyContent: \"flex-end\"\n  },\n  shadow: {\n    shadowColor: theme.colors.black,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 13,\n    elevation: 2\n  },\n  accent: {\n    backgroundColor: theme.colors.accent\n  },\n  primary: {\n    backgroundColor: theme.colors.primary\n  },\n  secondary: {\n    backgroundColor: theme.colors.secondary\n  },\n  tertiary: {\n    backgroundColor: theme.colors.tertiary\n  },\n  black: {\n    backgroundColor: theme.colors.black\n  },\n  white: {\n    backgroundColor: theme.colors.white\n  },\n  gray: {\n    backgroundColor: theme.colors.gray\n  },\n  gray2: {\n    backgroundColor: theme.colors.gray2\n  }\n});","map":{"version":3,"sources":["C:/Users/multicampus/Documents/GitHub/kkyu/yogo/yogofront/components/Block.js"],"names":["React","Component","theme","Block","margin","props","marginTop","marginRight","marginBottom","marginLeft","marginSize","Object","keys","length","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingSize","flex","row","column","center","middle","left","right","top","bottom","card","shadow","color","space","animated","wrap","style","children","blockStyles","styles","block","handleMargins","handlePaddings","justifyContent","flexWrap","backgroundColor","StyleSheet","create","flexDirection","borderRadius","sizes","radius","alignItems","shadowColor","colors","black","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","accent","primary","secondary","tertiary","white","gray","gray2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, View, Animated } from \"react-native\";\r\n\r\nimport { theme } from \"../constants\";\r\n\r\nexport default class Block extends Component {\r\n    handleMargins() {\r\n        const { margin } = this.props;\r\n        if (typeof margin === \"number\") {\r\n            return {\r\n                marginTop: margin,\r\n                marginRight: margin,\r\n                marginBottom: margin,\r\n                marginLeft: margin\r\n            };\r\n        }\r\n\r\n        if (typeof margin === \"object\") {\r\n            const marginSize = Object.keys(margin).length;\r\n            switch (marginSize) {\r\n                case 1:\r\n                    return {\r\n                        marginTop: margin[0],\r\n                        marginRight: margin[0],\r\n                        marginBottom: margin[0],\r\n                        marginLeft: margin[0]\r\n                    };\r\n                case 2:\r\n                    return {\r\n                        marginTop: margin[0],\r\n                        marginRight: margin[1],\r\n                        marginBottom: margin[0],\r\n                        marginLeft: margin[1]\r\n                    };\r\n                case 3:\r\n                    return {\r\n                        marginTop: margin[0],\r\n                        marginRight: margin[1],\r\n                        marginBottom: margin[2],\r\n                        marginLeft: margin[1]\r\n                    };\r\n                default:\r\n                    return {\r\n                        marginTop: margin[0],\r\n                        marginRight: margin[1],\r\n                        marginBottom: margin[2],\r\n                        marginLeft: margin[3]\r\n                    };\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePaddings() {\r\n        const { padding } = this.props;\r\n        if (typeof padding === \"number\") {\r\n            return {\r\n                paddingTop: padding,\r\n                paddingRight: padding,\r\n                paddingBottom: padding,\r\n                paddingLeft: padding\r\n            };\r\n        }\r\n\r\n        if (typeof padding === \"object\") {\r\n            const paddingSize = Object.keys(padding).length;\r\n            switch (paddingSize) {\r\n                case 1:\r\n                    return {\r\n                        paddingTop: padding[0],\r\n                        paddingRight: padding[0],\r\n                        paddingBottom: padding[0],\r\n                        paddingLeft: padding[0]\r\n                    };\r\n                case 2:\r\n                    return {\r\n                        paddingTop: padding[0],\r\n                        paddingRight: padding[1],\r\n                        paddingBottom: padding[0],\r\n                        paddingLeft: padding[1]\r\n                    };\r\n                case 3:\r\n                    return {\r\n                        paddingTop: padding[0],\r\n                        paddingRight: padding[1],\r\n                        paddingBottom: padding[2],\r\n                        paddingLeft: padding[1]\r\n                    };\r\n                default:\r\n                    return {\r\n                        paddingTop: padding[0],\r\n                        paddingRight: padding[1],\r\n                        paddingBottom: padding[2],\r\n                        paddingLeft: padding[3]\r\n                    };\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            flex,\r\n            row,\r\n            column,\r\n            center,\r\n            middle,\r\n            left,\r\n            right,\r\n            top,\r\n            bottom,\r\n            card,\r\n            shadow,\r\n            color,\r\n            space,\r\n            padding,\r\n            margin,\r\n            animated,\r\n            wrap,\r\n            style,\r\n            children,\r\n            ...props\r\n        } = this.props;\r\n\r\n        const blockStyles = [\r\n            styles.block,\r\n            flex && { flex },\r\n            flex === false && { flex: 0 }, // reset / disable flex\r\n            row && styles.row,\r\n            column && styles.column,\r\n            center && styles.center,\r\n            middle && styles.middle,\r\n            left && styles.left,\r\n            right && styles.right,\r\n            top && styles.top,\r\n            bottom && styles.bottom,\r\n            margin && { ...this.handleMargins() },\r\n            padding && { ...this.handlePaddings() },\r\n            card && styles.card,\r\n            shadow && styles.shadow,\r\n            space && { justifyContent: `space-${space}` },\r\n            wrap && { flexWrap: \"wrap\" },\r\n            color && styles[color], // predefined styles colors for backgroundColor\r\n            color && !styles[color] && { backgroundColor: color }, // custom backgroundColor\r\n            style // rewrite predefined styles\r\n        ];\r\n\r\n        if (animated) {\r\n            return (\r\n                <Animated.View style={blockStyles} {...props}>\r\n                    {children}\r\n                </Animated.View>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <View style={blockStyles} {...props}>\r\n                {children}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n    block: {\r\n        flex: 1\r\n    },\r\n    row: {\r\n        flexDirection: \"row\"\r\n    },\r\n    column: {\r\n        flexDirection: \"column\"\r\n    },\r\n    card: {\r\n        borderRadius: theme.sizes.radius\r\n    },\r\n    center: {\r\n        alignItems: \"center\"\r\n    },\r\n    middle: {\r\n        justifyContent: \"center\"\r\n    },\r\n    left: {\r\n        justifyContent: \"flex-start\"\r\n    },\r\n    right: {\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    top: {\r\n        justifyContent: \"flex-start\"\r\n    },\r\n    bottom: {\r\n        justifyContent: \"flex-end\"\r\n    },\r\n    shadow: {\r\n        shadowColor: theme.colors.black,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 13,\r\n        elevation: 2\r\n    },\r\n    accent: { backgroundColor: theme.colors.accent },\r\n    primary: { backgroundColor: theme.colors.primary },\r\n    secondary: { backgroundColor: theme.colors.secondary },\r\n    tertiary: { backgroundColor: theme.colors.tertiary },\r\n    black: { backgroundColor: theme.colors.black },\r\n    white: { backgroundColor: theme.colors.white },\r\n    gray: { backgroundColor: theme.colors.gray },\r\n    gray2: { backgroundColor: theme.colors.gray2 }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}