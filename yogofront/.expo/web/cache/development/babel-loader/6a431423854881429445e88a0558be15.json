{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Documents\\\\GitHub\\\\kkyu\\\\yogo\\\\yogofront\\\\components\\\\Text.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { theme } from \"../constants\";\n\nvar Typography = function (_Component) {\n  _inherits(Typography, _Component);\n\n  var _super = _createSuper(Typography);\n\n  function Typography() {\n    _classCallCheck(this, Typography);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Typography, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          h1 = _this$props.h1,\n          h2 = _this$props.h2,\n          h3 = _this$props.h3,\n          title = _this$props.title,\n          body = _this$props.body,\n          caption = _this$props.caption,\n          small = _this$props.small,\n          size = _this$props.size,\n          transform = _this$props.transform,\n          align = _this$props.align,\n          regular = _this$props.regular,\n          bold = _this$props.bold,\n          semibold = _this$props.semibold,\n          medium = _this$props.medium,\n          weight = _this$props.weight,\n          light = _this$props.light,\n          center = _this$props.center,\n          right = _this$props.right,\n          spacing = _this$props.spacing,\n          height = _this$props.height,\n          color = _this$props.color,\n          accent = _this$props.accent,\n          primary = _this$props.primary,\n          secondary = _this$props.secondary,\n          tertiary = _this$props.tertiary,\n          black = _this$props.black,\n          white = _this$props.white,\n          gray = _this$props.gray,\n          gray2 = _this$props.gray2,\n          style = _this$props.style,\n          children = _this$props.children,\n          props = _objectWithoutProperties(_this$props, [\"h1\", \"h2\", \"h3\", \"title\", \"body\", \"caption\", \"small\", \"size\", \"transform\", \"align\", \"regular\", \"bold\", \"semibold\", \"medium\", \"weight\", \"light\", \"center\", \"right\", \"spacing\", \"height\", \"color\", \"accent\", \"primary\", \"secondary\", \"tertiary\", \"black\", \"white\", \"gray\", \"gray2\", \"style\", \"children\"]);\n\n      var textStyles = [styles.text, h1 && styles.h1, h2 && styles.h2, h3 && styles.h3, title && styles.title, body && styles.body, caption && styles.caption, small && styles.small, size && {\n        fontSize: size\n      }, transform && {\n        textTransform: transform\n      }, align && {\n        textAlign: align\n      }, height && {\n        lineHeight: height\n      }, spacing && {\n        letterSpacing: spacing\n      }, weight && {\n        fontWeight: weight\n      }, regular && styles.regular, bold && styles.bold, semibold && styles.semibold, medium && styles.medium, light && styles.light, center && styles.center, right && styles.right, color && styles[color], color && !styles[color] && {\n        color: color\n      }, accent && styles.accent, primary && styles.primary, secondary && styles.secondary, tertiary && styles.tertiary, black && styles.black, white && styles.white, gray && styles.gray, gray2 && styles.gray2, style];\n      return React.createElement(Text, _extends({\n        style: textStyles\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), children);\n    }\n  }]);\n\n  return Typography;\n}(Component);\n\nexport { Typography as default };\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: theme.sizes.font,\n    color: theme.colors.black\n  },\n  regular: {\n    fontWeight: \"normal\"\n  },\n  bold: {\n    fontWeight: \"bold\"\n  },\n  semibold: {\n    fontWeight: \"500\"\n  },\n  medium: {\n    fontWeight: \"500\"\n  },\n  light: {\n    fontWeight: \"200\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  right: {\n    textAlign: \"right\"\n  },\n  accent: {\n    color: theme.colors.accent\n  },\n  primary: {\n    color: theme.colors.primary\n  },\n  secondary: {\n    color: theme.colors.secondary\n  },\n  tertiary: {\n    color: theme.colors.tertiary\n  },\n  black: {\n    color: theme.colors.black\n  },\n  white: {\n    color: theme.colors.white\n  },\n  gray: {\n    color: theme.colors.gray\n  },\n  gray2: {\n    color: theme.colors.gray2\n  },\n  h1: theme.fonts.h1,\n  h2: theme.fonts.h2,\n  h3: theme.fonts.h3,\n  title: theme.fonts.title,\n  body: theme.fonts.body,\n  caption: theme.fonts.caption,\n  small: theme.fonts.small\n});","map":{"version":3,"sources":["C:/Users/multicampus/Documents/GitHub/kkyu/yogo/yogofront/components/Text.js"],"names":["React","Component","theme","Typography","props","h1","h2","h3","title","body","caption","small","size","transform","align","regular","bold","semibold","medium","weight","light","center","right","spacing","height","color","accent","primary","secondary","tertiary","black","white","gray","gray2","style","children","textStyles","styles","text","fontSize","textTransform","textAlign","lineHeight","letterSpacing","fontWeight","StyleSheet","create","sizes","font","colors","fonts"],"mappings":"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","sourcesContent":["// just copy this code from the driving repo :)\r\nimport React, { Component } from \"react\";\r\nimport { Text, StyleSheet } from \"react-native\";\r\n\r\nimport { theme } from \"../constants\";\r\n\r\nexport default class Typography extends Component {\r\n    render() {\r\n        const {\r\n            h1,\r\n            h2,\r\n            h3,\r\n            title,\r\n            body,\r\n            caption,\r\n            small,\r\n            size,\r\n            transform,\r\n            align,\r\n            // styling\r\n            regular,\r\n            bold,\r\n            semibold,\r\n            medium,\r\n            weight,\r\n            light,\r\n            center,\r\n            right,\r\n            spacing, // letter-spacing\r\n            height, // line-height\r\n            // colors\r\n            color,\r\n            accent,\r\n            primary,\r\n            secondary,\r\n            tertiary,\r\n            black,\r\n            white,\r\n            gray,\r\n            gray2,\r\n            style,\r\n            children,\r\n            ...props\r\n        } = this.props;\r\n\r\n        const textStyles = [\r\n            styles.text,\r\n            h1 && styles.h1,\r\n            h2 && styles.h2,\r\n            h3 && styles.h3,\r\n            title && styles.title,\r\n            body && styles.body,\r\n            caption && styles.caption,\r\n            small && styles.small,\r\n            size && { fontSize: size },\r\n            transform && { textTransform: transform },\r\n            align && { textAlign: align },\r\n            height && { lineHeight: height },\r\n            spacing && { letterSpacing: spacing },\r\n            weight && { fontWeight: weight },\r\n            regular && styles.regular,\r\n            bold && styles.bold,\r\n            semibold && styles.semibold,\r\n            medium && styles.medium,\r\n            light && styles.light,\r\n            center && styles.center,\r\n            right && styles.right,\r\n            color && styles[color],\r\n            color && !styles[color] && { color },\r\n            // color shortcuts\r\n            accent && styles.accent,\r\n            primary && styles.primary,\r\n            secondary && styles.secondary,\r\n            tertiary && styles.tertiary,\r\n            black && styles.black,\r\n            white && styles.white,\r\n            gray && styles.gray,\r\n            gray2 && styles.gray2,\r\n            style // rewrite predefined styles\r\n        ];\r\n\r\n        return (\r\n            <Text style={textStyles} {...props}>\r\n                {children}\r\n            </Text>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    // default style\r\n    text: {\r\n        fontSize: theme.sizes.font,\r\n        color: theme.colors.black\r\n    },\r\n    // variations\r\n    regular: {\r\n        fontWeight: \"normal\"\r\n    },\r\n    bold: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    semibold: {\r\n        fontWeight: \"500\"\r\n    },\r\n    medium: {\r\n        fontWeight: \"500\"\r\n    },\r\n    light: {\r\n        fontWeight: \"200\"\r\n    },\r\n    // position\r\n    center: { textAlign: \"center\" },\r\n    right: { textAlign: \"right\" },\r\n    // colors\r\n    accent: { color: theme.colors.accent },\r\n    primary: { color: theme.colors.primary },\r\n    secondary: { color: theme.colors.secondary },\r\n    tertiary: { color: theme.colors.tertiary },\r\n    black: { color: theme.colors.black },\r\n    white: { color: theme.colors.white },\r\n    gray: { color: theme.colors.gray },\r\n    gray2: { color: theme.colors.gray2 },\r\n    // fonts\r\n    h1: theme.fonts.h1,\r\n    h2: theme.fonts.h2,\r\n    h3: theme.fonts.h3,\r\n    title: theme.fonts.title,\r\n    body: theme.fonts.body,\r\n    caption: theme.fonts.caption,\r\n    small: theme.fonts.small\r\n});\r\n"]},"metadata":{},"sourceType":"module"}